from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext
from states import ContactForm
from keyboards import main_menu
from config import ADMIN_CHAT_ID

router = Router()

# Start command
@router.message(F.text == "/start")
async def start_handler(message: Message):
    text = (
        "–°–∞–ª–æ–º, –¥”Ø—Å—Ç–∞–º! –ú–∞–Ω <b>–ë–æ—Ç–∏ –°—É—Ö—Ä–æ–±</b> “≥–∞—Å—Ç–∞–º ü§ñ‚ú®\n\n"
        "–ú–∞–Ω —è–∫ —Ñ—Ä–∏–ª–∞–Ω—Å–µ—Ä –≤–∞ –±–∞—Ä–Ω–æ–º–∞—Å–æ–∑–∏ –≤–µ–±—É –±–æ—Ç“≥–æ –º–µ–±–æ—à–∞–º.\n"
        "–ê–∑ –º–µ–Ω—é —è–∫–µ –∞–∑ “õ–∏—Å–º–∞—Ç“≥–æ—Ä–æ –∏–Ω—Ç–∏—Ö–æ–± –Ω–∞–º–æ, —Ç–æ —à–∏–Ω–æ—Å–æ–∏–∏ –±–µ—à—Ç–∞—Ä –ø–∞–π–¥–æ –∫—É–Ω”£! üëá"
    )
    await message.answer(text, reply_markup=main_menu, parse_mode="HTML")

# Skills menu handler
@router.callback_query(F.data == "skills")
async def skills_handler(callback: CallbackQuery):
    skills_text = (
        "üöÄ <b>–ú–∞–ª–∞–∫–∞“≥–æ–∏ –º–∞–Ω</b>:\n\n"
        "üß† Python ‚Äî —Ç–∞“≥–∏—è–∏ —Å–∫—Ä–∏–ø—Ç –≤–∞ –≤–µ–±-–∞–ø–ø“≥–æ\n"
        "ü§ñ Telegram Bot ‚Äî –±–æ Aiogram 3.x\n"
        "üåê HTML, CSS, JavaScript ‚Äî –≤–µ–±-–¥–∏–∑–∞–π–Ω –≤–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å\n"
        "‚öôÔ∏è –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ç—Å–∏—è ‚Äî –∫–æ—Ä–∫–∞—Ä–¥–∏ –≤–∞–∑–∏—Ñ–∞“≥–æ–∏ —Ö—É–¥–∫–æ—Ä\n\n"
        "üìå –ë–∞—Ä–æ–∏ —à–∏–Ω–æ—Å–æ”£ –±–æ –∫–æ—Ä“≥–æ—è–º, –ª—É—Ç—Ñ–∞–Ω ¬´–ü—Ä–æ–µ–∫—Ç“≥–æ¬ª-—Ä–æ –∞–∑ –º–µ–Ω—é –ø–∞—Ö—à –∫—É–Ω! üòä"
    )
    await callback.message.answer(skills_text, reply_markup=main_menu, parse_mode="HTML")
    await callback.answer()

# Projects menu handler
@router.callback_query(F.data == "projects")
async def projects_handler(callback: CallbackQuery):
    projects_text = (
        "üìÅ <b>–ù–∞–º—É–Ω–∞–∏ –ø—Ä–æ–µ–∫—Ç“≥–æ–∏ –º–∞–Ω:</b>\n\n"
        "1Ô∏è‚É£ <a href='https://t.me/SuhrobHelpBot'>Telegram –±–æ—Ç–∏ —Ñ—Ä–∏–ª–∞–Ω—Å</a>\n"
        "2Ô∏è‚É£ <a href='https://suhrob06.github.io/freelancer_bot/'>–°–æ–º–æ–Ω–∞–∏ —à–∞—Ö—Å”£</a>\n"
        "3Ô∏è‚É£ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ç—Å–∏—è–∏ –±–∏–∑–Ω–µ—Å –≤–∞ –¥–∏–≥–∞—Ä —Å–∫—Ä–∏–ø—Ç“≥–æ–∏ –º—É—Ñ–∏–¥\n\n"
        "üìû –ê–≥–∞—Ä —Ö–æ“≥”£ –±–æ –º–∞–Ω —Ç–∞–º–æ—Å –≥–∏—Ä”£, –¥–∞—Ä –º–µ–Ω—é —Ç—É–≥–º–∞–∏ ¬´–ö–æ–Ω—Ç–∞–∫—Ç¬ª-—Ä–æ –ø–∞—Ö—à –∫—É–Ω."
    )
    await callback.message.answer(
        projects_text,
        reply_markup=main_menu,
        parse_mode="HTML",
        disable_web_page_preview=True
    )
    await callback.answer()

# Contact menu handler
@router.callback_query(F.data == "contact")
async def contact_handler(callback: CallbackQuery, state: FSMContext):
    contact_info = (
        "üì≤ <b>–¢–∞–º–æ—Å –±–æ –º–∞–Ω</b>\n\n"
        "üîπ Telegram: <a href='https://t.me/odilmatov_o6'>@odilmatov_o6</a>\n"
        "‚úçÔ∏è –ê–≥–∞—Ä —Ö–æ“≥”£ –ø–∞—ë–º–∏ —à–∞—Ö—Å”£ –Ω–∞–≤–∏—Å”£ ‚Äî —Ç–∞–Ω“≥–æ –ø–∞—ë–º–∞—Ç—Ä–æ –Ω–∞–≤–∏—Å –≤–∞ –º–∞–Ω –æ–Ω—Ä–æ –±–æ —Ö—É—à–Ω—É–¥”£ “õ–∞–±—É–ª –º–µ–∫—É–Ω–∞–º! üòä"
    )
    await callback.message.answer(contact_info, parse_mode="HTML", disable_web_page_preview=True)
    await state.set_state(ContactForm.waiting_for_message)
    await callback.answer()

# Processing user's personal message
@router.message(ContactForm.waiting_for_message)
async def process_user_message(message: Message, state: FSMContext):
    user_message = message.text
    user_name = message.from_user.full_name
    username = message.from_user.username or "–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω"

    # Sending user's message to admin
    try:
        await message.bot.send_message(
            ADMIN_CHAT_ID,
            f"üì© –ü–∞—ë–º–∏ –Ω–∞–≤ –∞–∑ @{username} ({user_name}):\n\n{user_message}"
        )
    except Exception as e:
        # –ê–≥–∞—Ä –ø–∞—ë–º –±–∞ –∞–¥–º–∏–Ω –Ω–∞—Ä–∞–≤–∞–¥, —Ö–∞—Ç–æ–≥–∏—Ä–æ –ª–æ–≥ –∫—É–Ω –≤–∞ –±–∞ –∫–æ—Ä–±–∞—Ä —Ö–∞–±–∞—Ä –¥–µ“≥
        await message.answer("–ú—É—à–∫–∏–ª–æ—Ç –¥–∞—Ä –∏—Ä—Å–æ–ª–∏ –ø–∞—ë–º –±–∞ –∞–¥–º–∏–Ω. –õ—É—Ç—Ñ–∞–Ω –±–∞—ä–¥—Ç–∞—Ä –∫”Ø—à–∏—à –∫—É–Ω–µ–¥.")
        await state.clear()
        return

    # Replying to user
    await message.answer("‚úÖ –ü–∞—ë–º–∞—Ç–æ–Ω –±–æ –º—É–≤–∞—Ñ—Ñ–∞“õ–∏—è—Ç –∏—Ä—Å–æ–ª —à—É–¥! –ë–∞ –∑—É–¥”£ “∑–∞–≤–æ–± —Ö–æ“≥–∞–º –¥–æ–¥ üôå")
    await state.clear()